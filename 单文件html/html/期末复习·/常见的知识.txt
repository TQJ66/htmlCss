HTML5的标签是不分大小写的
在HTML5语法中，属性值不放在引号内也是正确的.如：<input checked="a">可以改为<input cheked=a>
同样，部分属性的属性值可以省略
<!--这是注释语句的格式-->
属性之间不分先后顺序，如<p align="center">我文本居中</p>这里align就是属性，center就是属性值
空格符在html里面是这样表示的：&nbsp；
图像标签的格式是这样的：<img src="图像地址"/>
绝对路径是指真实的路径，比如网页地址，c盘某个文件地址
相对路径就是相对于当前文件的路径，以网页文件为起点.
无序列表：ul用于定义，li嵌套在ul里面，ul至少包含一共li，都可以设置type值，分别是disc实心黑圆点，circle空心圆，square实心正方形
有序列表：ol用于定义，li嵌套在ol里，ol至少包含一共li，都可以设置type值，分别是1项目列表就是从1开始增大。a或A从a或A开始增大
定义列表：dl定义，dt和dd被嵌套在dl里面
超链接：<a href="跳转目标" target="跳转目标方式"></a>   target有两个属性值，_self在原窗口打开和_blank新窗口打开
css：
格式：选择器{属性：属性值；属性：属性值；} 属性和属性值用冒号链接，多个属性之间用分号分隔，最后一个声明的符号可以省略
演示一下：h1{color:green; font-size:15px; } 注意css代码属性值和单位之间不能有空格！！
css选择器严格区分大小写     /*这是css注释文本，注意是css！！！*/
行内式也被称为内联样式  其中style属性设置标签样式，行内式只对样式所在的行起作用
演示：<p style="font-size:10px; color:red; ">文本内容</p>
内嵌式是指把代码放在<<head>>头标签里面,用style定义
演示：<style type="text/css">
        h1{
            font-size:16px;
            color:red;
        }
      </style>
链入式也叫外链式，将所有代码放在一个或多个.css外部样式表内
演示一下：<link href="css文件路径" type="text/css" rel="stylesheet">
导入式和链入式差不多，只不过换了种方式
演示一下：<style type="text/css">
            @import url(路径)；或@import "路径"；
         </style>
标签选择器：标签名{font-size:9px; color:red; font-family:"宋体"；}
类选择器：.类名{font-size:19px; font-family:"宋体"; }  类名是指class定义的指，例如<p class="one">hhh</p> 
注意！！类名第一个字符不能为数字，严格区分大小写
id选择器：id选择器用#为关键词，列如：#id{font-weight:bold;} 对应<p id="id">hhh</p> 注意！！id选择器只能有唯一对应的标签
通配符选择器：用*进行标识，列如：*{margin:0; padding:0;}这句话就把所有标签的内外间距设置为0.
交集选择器：可以同时选择两个或以上的标签，可以和类选择器和id选择器一起用，列如：h1.p或者h1#id 想要生效就得同时满足，如<h1><p>hh</p></h1>,只有同时满足，才会生效
注意！！交集选择器的两个选择器之间不能有空格
并集选择器：为多个标签统一设置样式，由逗号隔开 ，列如：h1,h2,p{text-decoration:underline;}这句话代表只要是h1,h2,p就都会生效，给这些加下划线
后代选择器：用来控制内部嵌套，外面标签写在前面，内部写后面，用空格分开，列如：p strong{color:red;}代表只有在p段落里面的strong标签才会生效
字体样式属性：
font-family:"字体"; 它可以同时指定多个字体列如：font-family:"字体1"，"字体2"，"字体3";
字体之间用逗号隔开，运行代码时，浏览器会先用字体1，如果没有就用字体2，往下推
font-size:字号; 他后面的字号可以用像素值，百分比或倍率，单位分别是 px % em
font-style:字体风格; 定义字体风格
font:综合字体样式; 综合对字体设置 列如：h1{font:font-style font-weight font-size font-family}空格隔开
文本外观属性：
color:文本颜色; 颜色可以用英文名称，十六进制名称，RGB颜色值
letter-spacing:字间距; 字间距的值可以用像素值或倍率，单位分别是 px  em ，可以为负数
word-spacing:单词间距; 用于定义英文单词间距，中文没效果，后面的属性值和letter-spacing一样
line-height:行间距; 行间距 设置行于行之间的间隔 值可以用像素值，百分比或倍率，单位分别是 px % em
text-decoration:文本装饰; 设置文本的下划线，上划线，删除线等效果 他的属性值分别有none（无效果），underline(设置下划线)，overline(上划线)，line-through(删除线)
text-align:水平对其方式; 属性值分别是left(左对齐)，center(居中对其)，right(右对齐)，text-align仅对块元素，对行内元素无效
text-indent:首行缩进; 设置文本首行缩进，值可以用像素值，百分比或倍率，单位分别是 px % em
text-shadow:阴影效果; 给文本添加阴影效果，列如：h1{text-shadow:h-shadow v-shadow blur color;}
上述语法格式当中h-shadow设置阴影对平距离，v-设置垂直阴影效果，blur设置模糊半径，color设置阴影颜色
例：h1{text-shadow:10px 10px 2px red} 
列表样式属性：定义无序列表
list-style-type:属性; 可用属性有dics（实心圆），circle空心圆，square实心方块，none不适用符号
list-style-image:url（）; 为各个列表设置前面的项目图像，他的属性值是url（）地址，
list-style-position:属性; 设置列表项目符号的位置，属性值是：inside项目符号位于列表内，outside项目符号外，是默认值
list-style:属性; 将列表相关样式综合设置 列如：list-style:列表项目符号 列表项目符号位置 列表项目图像;
css3选择器：
使用属性选择器要根据标签的属性及属性值来选择对应的标签
E[attribute]选择器：E代指标签名称，attribute代指属性名称，前面的e可以省略，列如div[id]就用于包含id属性的div标签
E[attribute=value]选择器，E代指标签名称，attribute代指属性名称，value指属性值标签，e也可以省略，列如[align=center]就用于包含align属性且属性值为center的标签
E[attribute~=value]选择器，他只有在标签中的属性和属性值完全一致才会被启用
E[attribute^=value]选择器，列如：div[id^=section],他就只包含id属性值以section开头的div标签
E[attribute(美元)=value]选择器，列如：div[id(美元)=section],他就只包含id属性值以section结尾的div标签
E[attribute*=value]选择器，列如：div[id*=section],他就只包含id属性值包含section的div标签
属性1>属性2 子元素选择器，用>连接，列如：h1>strong{}他就是选择h1标签中的strong标签
属性1+属性2 邻近兄弟选择器，用+连接，列如h1+p{}他就是选择h1后面最近的那个p段落
属性1~属性2 普通兄弟选择器，用~连接，列如h1~p{}他就是选择在h1以后的p段落
:root选择器，它定义的样式对于所有页面标签都生效 列如：  :root{}
:not选择器，用于除他定义之外的标签，比如：h1:not(.one){}他就是选择类名不是.one的h1标签
:only-child选择器，就是选中他父标签当中只有一个的子标签，
列如strong:only-child{}他就是选中在任意父标签内只包含一个stron标签的语句
举个例子：
<p>
  <strong></strong>
  <strong></strong>
</p>
<p>
  <strong></strong>
</p>
<p>
  <strong></strong>
  <strong></strong>
  <strong></strong>
</p>
观察上面的语句，他只会选中中间那个p段落里面的strong，因为他是父标签（p）里面仅有唯一的strong标签
:first-child选择器，他用于选中父标签当中的第一个子标签，列如： p:first-child{}他就是选中第一个p段落
:last-child 选择器，他用于选中父标签当中的最后一个子标签，列如： p:last-child{}他就是选中最后一个p段落
:nth-child(n)选择器，他用于选中父标签当中正数第n个子标签，列如： p:nth-child(2){}他就是选中段落里面第2个p段落
:nth-last-child(n)选择器，他用于选中父标签当中倒数第n个子标签，列如： p:nth-last-child(2){}他就是选中段落里面倒数第2个p段落
状态化伪类选择器：
a:link{}设置超链接默认样式
a:visited{}被访问之后样式
a:hover{}鼠标指针悬停样式
a:active{}单击时超链接样式
text-decoration:noen;取消下划线
边框属性：
border-style 设置边框样式，none无边框，solid边框为单实线，dashed边框为虚线，dotted点线，double双实线
boder-widht 设置边框宽度
border-color 设置边框颜色
border-radius 设置圆角边框
border-image 设置图片边框 ：
  border-image-source 指定图像路径
  border-iamge-width 指定边框宽度
  border-iamge-repeat 指定图像填充方式 其中reprat是平铺，stretch是拉伸
边距属性：
  内边距：
    padding：上边距[右 下 左];不能为负值
    padding-top:上内边距;
    padding-right:右内边距;
    padding-bottom:下内边距;
    padding-left:左内边距;
    他可以设置复合属性，列如：padding-left:5px solid red;就是代表左内边距是红色5像素的单实线
  外边距:
    margin:上边距[右 下 左];可以为负值
    margin-top:上内边距;
    margin-right:右内边距;
    margin-bottom:下内边距;
    margin-left:左内边距;
    可以设置margin:0 auto;让元素块水平居中

设置背景颜色：background-color:颜色; 
设置背景图像：background-image:url(图片地址); 
设置背景图像平铺：background-repeat  
  属性1：repeat: 背景图像沿水平和垂直两个方向平铺
  属性2：no-repeat: 背景图像不平铺，只显示一次
  属性3：repeat-x: 背景图像只沿水平方向铺
  属性4：repeat-y：背景图像只沿垂直方向铺
设置背景图像位置：
  background-position:属性1 属性2; 
  属性1表示水平位置，包括left，center，right
  属性2表示垂直位置，包括top，center，bottom
设置背景图像固定：background-attachment:属性; 有两个属性值，scroll设置背景图像和页面一起滚动，fixed设置背景图像固定位置
设置背景颜色与不透明度：
  background-color: raba(r,g,b,不透明度); 
设置背景图像大小：background-size：属性1 属性2; 
元素浮动：选择器{float:属性;} 属性值有left(元素左移动)，right(元素右移动)，none(不浮动)
overflow属性: 选择器{overflow:属性;} 属性值有visible内容不修改(默认值)，hidden溢出内容修剪，auto溢出内容滚动条
元素定位：
  定位模式：
    选择器{position:属性值;}  属性值有static默认静态，relative相对定位 对原文档位置，absolute绝对定位 对上个已经定位的父元素定位，fixed固定定位 对于浏览器窗口定位
  边偏移：都是向相反方向移动
    属性：top元素对于上边距的距离，bottom元素对于下边距的距离，left元素对于左边距的距离，right元素对于右边距的距离
元素类型与转换：
  元素类型：
    块元素：独占一行或多行，如：div，h1~h6，p，ul，ol，li等
    行内元素：可与其他元素一行，但不可设置宽，高，对其等属性，如：strong，b,em,i,del,a,span
  元素转换：
    为了得到块元素可多行显示，行内元素可调整属性
    可以用dispaly属性转换，属性值有: 
      inline: 把元素显示为行内元素
      block: 将元素显示块元素
      inline-block: 将行内元素显示为行内块元素 可以对该元素设置宽高等，但是该元素不会独占一行
      none: 元素隐藏
表格和表单:
  表格：
    他的格式： <table>
                <tr>
                  <td>表单文字<td>
                </tr>
              </table>
      tr定义他有几行，td定义他有几列
    table的属性：
      border="像素值" 设置表格边框宽度
      cellspacing单元格与单元格距离
      cellpadding单元格内容与单元格边缘距离
      widht设置表格宽度
      height设置表格高度
      align设置表格对其方式
      bgcolor设置表格背景颜色
      backgroun设置表格背景图像
    tr的属性：
      height设置行高
      align设置行内容水平对其方式
      bgcolor设置行内容背景颜色
      backgroun设置行内容背景图像
      valign设置行内容垂直对其方式
    td的属性：
      width设置单元格宽度
      height设置单元格高度
      align设置单元格水平对其方式
      valign设置单元格内容垂直对其方式
      colspan设置单元格合并垂直列数
      rowspan设置单元格合并行列数
  表单：
    他的格式： <form action=" URL" method="提交方式" name="表单名称">
                各种表单控件
              </form>
      action属性，他后面写处理表单数据的地址
      method属性，他设置表单提交方式，get或post，其中get默认值
        get是一次性发送所有数据，post是分段数据传输，另外get传输提交数据会显示浏览器地址栏中，post保密好，无数据量限制
      name属性，指定表单的名称
    表单控件：
      input控件：<input type="控件类型"/>
        type属性：他包含了很多属性值
          text单行文本框，password密码输入框，radio单选按钮，checkbox复选框，button普通按钮，submit提交按钮，reset重置按钮
          image图象式提交按钮，hidden隐藏域，file文件域
        name属性，用户自定义控件名称
        value属性，用户自定义控件中默认文本内容
        size属性，控件在页面中显示的宽度
        maxlength属性，控件中允许输入最多字符
        email控件类型：<input type="email">专门输入电子邮箱的，如果输入其他的就会出错
        tel控件类型：<input type="tel">号码输入框
        range类型：<input type="range">控制输入数值的范围
      textarea控件： <textarea cols="每行字数" rows="显示行数">
                      文本内容
                    </textarea>
        cols属性定义多行文本每行的字数，rows定义多行文本的行数
      select控件： <stlect>
                      <option>选项1</option>
                      <option>选项2</option>
                      <option>选项3</option>
                  </stlect>
        option嵌套在select当中，他就是一个多个选项的下拉列表
        select属性：size指定下拉列表时指定的可见选项数量，multiple下拉列表有多选功能